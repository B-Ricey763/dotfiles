if status is-interactive
    # binds
    bind \cY accept-autosuggestion

    # Abbr
    abbr --add v nvim
    abbr --add cofi "cd ~/.config/fish/ && nvim ."
    abbr --add cogh nvim ~/.config/ghostty/config
    abbr --add cosk nvim ~/.config/skhd/skhdrc
    abbr --add coya nvim ~/.config/yabai/yabairc
    abbr --add coske "cd ~/.config/sketchybar/ && nvim ."
    abbr --add cost nvim ~/.config/starship.toml
    abbr --add covi "cd ~/.config/nvim/ && nvim ."

    # Prompt
    starship init fish | source

    # Fuzzies
    fzf --fish | source
    zoxide init fish | source


    # Files
    function y
        set tmp (mktemp -t "yazi-cwd.XXXXXX")
        yazi $argv --cwd-file="$tmp"
        if set cwd (command cat -- "$tmp"); and [ -n "$cwd" ]; and [ "$cwd" != "$PWD" ]
                builtin cd -- "$cwd"
        end
        rm -f -- "$tmp"
    end
end




# # >>> conda initialize >>>
# # !! Contents within this block are managed by 'conda init' !!
# if test -f /Users/bricey/miniconda3/bin/conda
#     eval /Users/bricey/miniconda3/bin/conda "shell.fish" "hook" $argv | source
# else
#     if test -f "/Users/bricey/miniconda3/etc/fish/conf.d/conda.fish"
#         . "/Users/bricey/miniconda3/etc/fish/conf.d/conda.fish"
#     else
#         set -x PATH "/Users/bricey/miniconda3/bin" $PATH
#     end
# end
# # <<< conda initialize <<<

# Lazy load conda from this thread: https://stackoverflow.com/questions/74661211/how-to-wrap-the-conda-command-in-a-fish-function-to-initialize-conda-only-on-dem
function conda --wraps 'conda'
    echo 'Initializing conda...'
    # We erase ourselves because conda defines a function of the same name.
    # This allows checking that that happened and can prevent infinite loops
    functions --erase conda
    /Users/bricey/miniconda3/bin/conda "shell.fish" "hook" | source

    if not functions -q conda
        # If the function wasn't defined, we should not do the call below.
        echo 'Something went wrong initializing conda!' >&2
        return 1
    end
    # Now we can call `conda`, which is a function, but not this one (because we erased it),
    # so this is not an infinite loop.
    conda $argv
end
